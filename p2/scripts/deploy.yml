---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hello-world
  annotations:
    kubernetes.io/ingress.class: "traefik"
spec:
  rules:
  - host: "app1.com"
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: app1
            port:
              number: 80
    - host: "app2.com"
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: app2
            port:
              number: 80
    - host: "app3.com"
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: app3
              port:
                number: 80

---
apiVersion: v1
kind: Service
metadata:
  name: app1
spec:
  ports:
    - port: 80
      protocol: TCP
  selector:
    app:  app1

---
apiVersion: v1
kind: Service
metadata:
  name: app2
spec:
  ports:
    - port: 80
      protocol: TCP
  selector:
    app:  app2

---
apiVersion: v1
kind: Service
metadata:
  name: app3
spec:
  ports:
    - port: 80
      protocol: TCP
  selector:
    app:  app3

---
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app1
  template:
    metadata:
      labels:
        app: app1
    spec:
      containers:
        - name: app1
          image: paulbouwer/hello-kubernetes:1.10
          ports:
            - containerPort: 8080
          imagePullPolicy: Always
          env: 
          - name: MESSAGE
            value: "App1"
---
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app2
  template:
    metadata:
      labels:
        app: app2
    spec:
      containers:
        - name: amazing-web-app
          image: paulbouwer/hello-kubernetes:1.10
          ports:
            - containerPort: 8080
          imagePullPolicy: Always
          env: 
          - name: MESSAGE
            value: "App2"
  ---
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app3
spec:
  replicas: 3
  selector:
    matchLabels:
      app: app3
  template:
    metadata:
      labels:
        app: app3
    spec:
      containers:
        - name: app3
          image: paulbouwer/hello-kubernetes:1.10
          ports:
            - containerPort: 8080
          imagePullPolicy: Always
          env: 
          - name: MESSAGE
            value: "App3"